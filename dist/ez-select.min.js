"use strict";angular.module("ez.select",["ez.object2array"]).constant("ezSelectConfig",{method:"GET",idField:"id",textField:"text",placeholder:"Select an option",multiPlaceholder:"Click to select an option",searchPlaceholder:"Search...",searchHelpText:"Enter $$ or more characters...",minSearchChars:2,emptyText:"No options found"}).directive("ezSelect",["ezSelectConfig","$document","$timeout","$q","$http","object2arrayFilter","filterFilter","orderByFilter",function(ezSelectConfig,$document,$timeout,$q,$http,object2arrayFilter,filterFilter,orderByFilter){return{restrict:"EA",replace:!0,scope:{options:"=?options",selected:"=?selected"},templateUrl:"ez-select-tpl.html",compile:function(element,attrs){var $toggle=element.find(".ez-select-toggle"),fontSize=parseFloat($toggle.css("font-size"),10),maxChars=$toggle.width()/(.5*fontSize),method=attrs.method||ezSelectConfig.method,emptyText=attrs.emptyText||ezSelectConfig.emptyText,searchHelpText=attrs.searchHelpText||ezSelectConfig.searchHelpText,minSearchChars=attrs.minSearchChars||ezSelectConfig.minSearchChars;return function(scope,element,attrs){scope.showDropdown=!1,scope.multiple=!!attrs.multiple,scope.placeholder=attrs.placeholder||ezSelectConfig.placeholder,scope.multiPlaceholder=attrs.multiPlaceholder||ezSelectConfig.multiPlaceholder,scope.searchPlaceholder=attrs.searchPlaceholder||ezSelectConfig.searchPlaceholder,scope.idField=attrs.idField||ezSelectConfig.idField,scope.textField=attrs.textField||ezSelectConfig.textField,scope.emptyText=!1,scope.ajaxSearch=!1,scope.query="",scope.form={query:""},"undefined"==typeof scope.options&&(scope.options=[]),"undefined"==typeof scope.selected&&(scope.selected=scope.multiple?[]:""),attrs.url?(scope.ajaxSearch=!0,scope.showSearchInput=!0):scope.showSearchInput=!!attrs.search,scope.filter=function(){scope._options=object2arrayFilter(scope.options),scope._options=orderByFilter(scope._options,["-_selected","text"]),scope.query&&(scope._options=filterFilter(scope._options,{text:scope.query})),scope.emptyText=scope.ajaxSearch?scope.form.query.length<minSearchChars?searchHelpText.replace("$$",parseInt(minSearchChars,10)-scope.form.query.length):scope._options.length?!1:emptyText:scope._options.length?!1:emptyText},scope.closeDropdown=function(e){if("undefined"!=typeof e){if($(e.target).parents(".ez-select-container").get(0)===element.get(0))return!1;scope.showDropdown=!1,scope.$apply()}else scope.showDropdown=!1;$document.unbind("click",scope.closeDropdown)},scope.open=function(e){scope.showDropdown?scope.closeDropdown(e):(scope.showDropdown=!0,$timeout(function(){element.find(".search-input").trigger("focus")}),$document.click(scope.closeDropdown))},scope.select=function(e,option){if(e.preventDefault(),e.stopPropagation(),option._selected)if(scope.$emit("ez_select.unselect",option),scope.multiple){var i=scope.selected.indexOf(option[scope.idField]);-1!==i&&scope.selected.splice(i,1)}else scope.selected="";else scope.$emit("ez_select.select",option),scope.multiple?scope.selected.push(option[scope.idField]):scope.selected=option[scope.idField];scope.multiple||scope.closeDropdown()},scope.updateText=function(){var str="";scope.multiple?(angular.forEach(scope.selected,function(selectedOption){angular.forEach(scope.options,function(option){selectedOption[scope.idField]===option[scope.idField]&&(str+=option[scope.textField]+", ")})}),str=str.slice(0,-2)):angular.forEach(scope.options,function(option){option[scope.idField]===scope.selected&&(str+=option[scope.textField])}),str?str.length>maxChars&&(str=scope.multiple?scope.selected.length+" selected":"1 selected"):str=scope.placeholder,scope.selectedText=str};var req,canceler=$q.defer();scope.$watch("form.query",function(newVal,oldVal){scope.ajaxSearch?newVal&&newVal!==oldVal&&newVal.length>=minSearchChars?(req===!0&&(canceler.resolve(),canceler=$q.defer()),req=!0,$http({method:method,url:attrs.url,params:{q:newVal},timeout:canceler.promise}).success(function(data){req=!1,scope.options=data,scope.filter()}).error(function(e){scope.$broadcast("ez-select.error.search",e)})):(scope.options={},scope.filter()):(scope.query=newVal,scope.filter())}),scope.$watchCollection("selected",function(newVal){console.log("selected watch",newVal),scope.multiple?(console.log("multi"),angular.forEach(scope.options,function(v){console.log("is "+v[scope.idField]+"in ",scope.options),v._selected=-1!==newVal.indexOf(v[scope.idField])?!0:!1})):angular.forEach(scope.options,function(v){v._selected=newVal===v[scope.idField]?!0:!1}),scope.updateText(),scope.filter()})}}}}]);